{"id":"rTqR","dependencies":[{"name":"C:\\Users\\Nayef\\Desktop\\BootCamp\\Portfolio-NBK\\package.json","includedInParent":true,"mtime":1634409771431}],"generated":{"js":"module.exports=\"#define GLSLIFY 1\\n// uniform sampler2D uTexture;\\n// uniform vec2 uOffset;\\n// varying vec2 vUv;\\n\\n// float M_PI = 3.141529;\\n\\n// vec3 deformationCurve = (vec3 position, vec2 uv, vec2 offset){\\n//     position.x = position.x + (sin(uv.y * M_PI) * offset.x);\\n//     position.y = position.y + (sin(uv.x * M_PI) * offset.y);\\n//     return position;\\n// }\\n\\n// void main() {\\n//     vUv = uv;\\n//     vec3 newPosition = deformationCurve(position, uv, uOffset);\\n//     gl_Position = projectionMatrix * modelViewMatrix * vec4(newPosition, 1.0);\\n// }\\n\\nuniform sampler2D uTexture;\\nuniform vec2 uOffset;\\nvarying vec2 vUv;\\n\\nfloat M_PI = 3.141529;\\n\\nvec3 deformationCurve(vec3 position, vec2 uv, vec2 offset){\\n    position.x = position.x + (sin(uv.y * M_PI) * offset.x);\\n    position.y = position.y + (sin(uv.x * M_PI) * offset.y);\\n    return position;\\n}\\n\\nvoid main(){\\n    vUv = uv;\\n    vec3 newPosition = deformationCurve(position, uv, uOffset);\\n    gl_Position = projectionMatrix * modelViewMatrix * vec4(newPosition, 1.0);\\n}\\n\";"},"sourceMaps":{"js":{"mappings":[{"source":"assets/js/shaders/vertex.glsl","name":"module","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"assets/js/shaders/vertex.glsl","name":"exports","original":{"line":1,"column":7},"generated":{"line":1,"column":7}},{"source":"assets/js/shaders/vertex.glsl","original":{"line":1,"column":15},"generated":{"line":1,"column":15}}],"sources":{"assets/js/shaders/vertex.glsl":"module.exports=\"#define GLSLIFY 1\\n// uniform sampler2D uTexture;\\n// uniform vec2 uOffset;\\n// varying vec2 vUv;\\n\\n// float M_PI = 3.141529;\\n\\n// vec3 deformationCurve = (vec3 position, vec2 uv, vec2 offset){\\n//     position.x = position.x + (sin(uv.y * M_PI) * offset.x);\\n//     position.y = position.y + (sin(uv.x * M_PI) * offset.y);\\n//     return position;\\n// }\\n\\n// void main() {\\n//     vUv = uv;\\n//     vec3 newPosition = deformationCurve(position, uv, uOffset);\\n//     gl_Position = projectionMatrix * modelViewMatrix * vec4(newPosition, 1.0);\\n// }\\n\\nuniform sampler2D uTexture;\\nuniform vec2 uOffset;\\nvarying vec2 vUv;\\n\\nfloat M_PI = 3.141529;\\n\\nvec3 deformationCurve(vec3 position, vec2 uv, vec2 offset){\\n    position.x = position.x + (sin(uv.y * M_PI) * offset.x);\\n    position.y = position.y + (sin(uv.x * M_PI) * offset.y);\\n    return position;\\n}\\n\\nvoid main(){\\n    vUv = uv;\\n    vec3 newPosition = deformationCurve(position, uv, uOffset);\\n    gl_Position = projectionMatrix * modelViewMatrix * vec4(newPosition, 1.0);\\n}\\n\";"},"lineCount":null}},"error":null,"hash":"cd2bb0f4ad356bb4693c9cf8d05693d5","cacheData":{"env":{}}}