{"id":"assets/js/shaders/vertex.glsl","dependencies":[{"name":"C:\\Users\\Nayef\\Desktop\\BootCamp\\Portfolio-NBK\\package.json","includedInParent":true,"mtime":1635686639419}],"generated":{"js":"module.exports = \"#define GLSLIFY 1\\n// uniform sampler2D uTexture;\\n// uniform vec2 uOffset;\\n// varying vec2 vUv;\\n\\n// float M_PI = 3.141529;\\n\\n// vec3 deformationCurve = (vec3 position, vec2 uv, vec2 offset){\\n//     position.x = position.x + (sin(uv.y * M_PI) * offset.x);\\n//     position.y = position.y + (sin(uv.x * M_PI) * offset.y);\\n//     return position;\\n// }\\n\\n// void main() {\\n//     vUv = uv;\\n//     vec3 newPosition = deformationCurve(position, uv, uOffset);\\n//     gl_Position = projectionMatrix * modelViewMatrix * vec4(newPosition, 1.0);\\n// }\\n\\nuniform sampler2D uTexture;\\nuniform vec2 uOffset;\\nvarying vec2 vUv;\\n\\nfloat M_PI = 3.141529;\\n\\nvec3 deformationCurve(vec3 position, vec2 uv, vec2 offset){\\n    position.x = position.x + (sin(uv.y * M_PI) * offset.x);\\n    position.y = position.y + (sin(uv.x * M_PI) * offset.y);\\n    return position;\\n}\\n\\nvoid main(){\\n    vUv = uv;\\n    vec3 newPosition = deformationCurve(position, uv, uOffset);\\n    gl_Position = projectionMatrix * modelViewMatrix * vec4(newPosition, 1.0);\\n}\\n\";"},"sourceMaps":{"js":{"mappings":[{"name":"module","generated":{"line":1,"column":0},"source":"assets/js/shaders/vertex.glsl","original":{"line":1,"column":0}},{"generated":{"line":1,"column":6},"source":"assets/js/shaders/vertex.glsl","original":{"line":1,"column":6}},{"name":"exports","generated":{"line":1,"column":7},"source":"assets/js/shaders/vertex.glsl","original":{"line":1,"column":7}},{"generated":{"line":1,"column":14},"source":"assets/js/shaders/vertex.glsl","original":{"line":1,"column":0}},{"generated":{"line":1,"column":17},"source":"assets/js/shaders/vertex.glsl","original":{"line":1,"column":15}},{"generated":{"line":1,"column":1062},"source":"assets/js/shaders/vertex.glsl","original":{"line":1,"column":0}}],"sources":{"assets/js/shaders/vertex.glsl":"module.exports=\"#define GLSLIFY 1\\n// uniform sampler2D uTexture;\\n// uniform vec2 uOffset;\\n// varying vec2 vUv;\\n\\n// float M_PI = 3.141529;\\n\\n// vec3 deformationCurve = (vec3 position, vec2 uv, vec2 offset){\\n//     position.x = position.x + (sin(uv.y * M_PI) * offset.x);\\n//     position.y = position.y + (sin(uv.x * M_PI) * offset.y);\\n//     return position;\\n// }\\n\\n// void main() {\\n//     vUv = uv;\\n//     vec3 newPosition = deformationCurve(position, uv, uOffset);\\n//     gl_Position = projectionMatrix * modelViewMatrix * vec4(newPosition, 1.0);\\n// }\\n\\nuniform sampler2D uTexture;\\nuniform vec2 uOffset;\\nvarying vec2 vUv;\\n\\nfloat M_PI = 3.141529;\\n\\nvec3 deformationCurve(vec3 position, vec2 uv, vec2 offset){\\n    position.x = position.x + (sin(uv.y * M_PI) * offset.x);\\n    position.y = position.y + (sin(uv.x * M_PI) * offset.y);\\n    return position;\\n}\\n\\nvoid main(){\\n    vUv = uv;\\n    vec3 newPosition = deformationCurve(position, uv, uOffset);\\n    gl_Position = projectionMatrix * modelViewMatrix * vec4(newPosition, 1.0);\\n}\\n\";"},"lineCount":null}},"error":null,"hash":"d0d76f794cc6a57a5bad93c04e6c48a7","cacheData":{"env":{}}}